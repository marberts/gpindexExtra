
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(gpindexExtra)
Loading required package: gpindex
> library(IndexNumR)
> 
> all.equal(tornqvist_geks(1, 1, 1, 1), c("1" = 1))
[1] TRUE
> 
> all.equal(fisher_geks(integer(0), numeric(0), logical(0), character(0)),
+           structure(numeric(0), names = character(0)))
[1] TRUE
> 
> dat <- data.frame(price = 1:15, quantity = 1:15, period = 1:3, product = rep(1:5, each = 3))
> 
> all.equal(as.numeric(with(dat, tornqvist_geks(price, quantity, period, product))), 
+           as.numeric(GEKSIndex(dat, "price", "quantity", "period", prodID = "product", window = 3)))
[1] TRUE
> 
> all.equal(as.numeric(with(dat, geks(fisher_index)(price, quantity, period, product))), 
+           as.numeric(GEKSIndex(dat, "price", "quantity", "period", "fisher", prodID = "product", window = 3)))
[1] TRUE
> 
> all.equal(as.numeric(with(dat, geks(arithmetic_index("Walsh1"))(price, quantity, period, product))), 
+           as.numeric(GEKSIndex(dat, "price", "quantity", "period", "walsh", prodID = "product", window = 3)))
[1] TRUE
> 
> dat <- dat[-c(1, 5, 15), ]
> 
> all.equal(as.numeric(with(dat, geks(matched(geometric_index("Tornqvist")))(price, quantity, period, product, na.rm = TRUE))), 
+           as.numeric(GEKSIndex(dat, "price", "quantity", "period", prodID = "product", window = 3)))
[1] TRUE
> 
> all.equal(as.numeric(with(dat, geks(matched(fisher_index))(price, quantity, period, product, na.rm = TRUE))), 
+           as.numeric(GEKSIndex(dat, "price", "quantity", "period", "fisher", prodID = "product", window = 3)))
[1] TRUE
> 
> all.equal(as.numeric(with(dat, geks(matched(arithmetic_index("Walsh1")))(price, quantity, period, product, na.rm = TRUE))), 
+           as.numeric(GEKSIndex(dat, "price", "quantity", "period", "walsh", prodID = "product", window = 3)))
[1] TRUE
> 
> proc.time()
   user  system elapsed 
  0.345   0.227   0.310 
